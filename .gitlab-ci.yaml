variables:
  IMAGE_NAME: nanajanashia/demo-app
  IMAGE_TAG: python-app-1.0

# multiple jobs in the same stage are executed in parallel
# stages define the order
stages:
  - test
  - build
  - deploy

run_tests:
  stage: test
  # all jobs are executed in Docker containers, default is ruby image
  image: python:3.9-slim-buster
  before_script:
    - apt-get update && apt-get install make
  script:
    - make test

build_image:
  stage: build
  # docker in docker
  image: docker:20.10.16
  # also need docker daemon
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    # Settings - CI/CD - Variables (ideal for tokens and password)
    # dockerhub is the default registry
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
  script:
    # repository location should be included in the image name (hub.docker.com is the default)
    - docker build -t $IMAGE_NAME:$IMAGE_TAG . 
    - docker push $IMAGE_NAME:$IMAGE_TAG

deploy:
  stage: deploy
  script:
    # login to the remote server first
    # passing the docker command to ssh
    # stop and remove container (port already in use), then new one can be created 
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@x.y.x "
        docker login -u $REGISTRY_USER -p $REGISTRY_PASS &&
        docker ps -aq | xargs docker stop | xargs docker rm &&
        docker run -d -p 5000:5000 $IMAGE_NAME:$IMAGE_TAG"
